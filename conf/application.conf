# Copyright 2018 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "common.conf"

appName="paye-registration-frontend"
application.router=prod.Routes

application.global=config.FrontendGlobal

play.filters.headers.contentSecurityPolicy= "default-src 'self' 'unsafe-inline' localhost:9000 localhost:9032 www.google-analytics.com data:"

json.encryption {
  key="fqpLDZ4sumDsekHkeEBlCA=="
  previousKeys = []
}

#jobs {
#  public-beta {
#    enabled   = false
#    interval  = 1 #Hour
#    timeUnit  = HOUR #DAY | HOUR | MINUTE | SECOND
#  }
#}

# Play Modules
# ~~~~
# Additional play modules can be added here
play.modules.enabled += "com.kenshoo.play.metrics.PlayModule"
play.modules.enabled += "config.Module"

# Global request handler
# ~~~~
# Set to the object handler for migrated 2.3 services
play.http.requestHandler = "play.api.http.GlobalSettingsHttpRequestHandler"

Csrf-Bypass-value = "bm9jaGVjaw=="

play.filters.csrf.header.bypassHeaders {
  X-Requested-With = "*"
  Csrf-Bypass = "nocheck"
}

mongodb {
  uri = "mongodb://localhost:27017/paye-registration-frontend"
  timeToLiveInSeconds = 3600
}

csrfexceptions.whitelist=[
  "/internal/([0-9])+/delete",
  "/internal/company-incorporation"
]

# Timeout
timeoutInSeconds = 900

reportAProblemPartialUrl = "/contact/problem_reports_ajax?service=SCRS"
reportAProblemNonJSUrl   = "/contact/problem_reports_nonjs?service=SCRS"

Dev {
  microservices {
    cacheable {
      short-lived-cache {
        protocol = http
        host = localhost
        port = 9272
        domain = save4later
      }
    }
  }
}



microservice {
  metrics {
    graphite {
      host = localhost
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }

  services {
    cachable {
      short-lived-cache {
        protocol = http
        host = localhost
        port = 9272
        domain = save4later
      }
      session-cache {
        host = localhost
        port = 8400
        domain = keystore
      }
    }
    auth {
      host = localhost
      port = 8500
      login_path = "/gg/sign-in?accountType=organisation"
      login-callback {
        url = "http://localhost:9870"
      }
      company-auth {
        host = localhost
        port = 9025
        url = "http://localhost:9025"
        uri = "/gg/sign-in"
      }
    }
    paye-registration-frontend {
      www {
        url="http://localhost:9870"
        uri="/register-for-paye"
      }
      ii-callback {
        url = "http://localhost:9870/internal"
      }
    }
    paye-registration-eligibility-frontend {
      www {
        url = "http://localhost:9877"
        uri = "/eligibility-for-paye"
      }
    }
    paye-registration {
      host = localhost
      port = 9873
    }
    business-registration {
      host = localhost
      port = 9660
    }
    incorporation-frontend-stubs {
      host = localhost
      uri = "/incorporation-frontend-stubs"
      port = 9986
    }
    company-registration {
      host = localhost
      uri = "/company-registration"
      port = 9973
    }
    company-registration-frontend {
      host = localhost
      uri = "/register-your-company"
      port = 9970
      www {
        url = "http://localhost:9970"
        uri = "/register-your-company"
      }
    }
    address-lookup-frontend {
      host = localhost
      port = 9028
    }
    contact-frontend {
      host = localhost
      port = 9250
    }
    email {
      sendAnEmailURL = "http://localhost:8300/hmrc/email"
    }
    hmrc-deskpro {
      host = localhost
      port = 8650
    }
    incorporation-information {
      host = localhost
      uri = "/incorporation-information"
      port = 9976
    }
  }
}
metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = false
  enabled = true
}

auditing {
  enabled=true
  traceRequests=true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}
google-analytics {
  token=N/A
  host=auto
}

assets {
  version = "2.253.0"
  version = ${?ASSETS_FRONTEND_VERSION}
  url     = "http://localhost:9032/assets/"
}

controllers {
  # 300 is the default, you may need to change this according to your needs
  confidenceLevel = 300

  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

  controllers.userJourney.CompanyDetailsController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  controllers.userJourney.PAYEContactController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  controllers.userJourney.EmploymentController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  controllers.userJourney.SignInOutController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  controllers.userJourney.SummaryController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  controllers.userJourney.WelcomeController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  controllers.test.BusinessProfileController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  controllers.test.TestCacheController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  controllers.test.TestCohoController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  controllers.test.CurrentProfileController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  controllers.feedback.FeedbackController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  controllers.internal.RegistrationController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }
}
